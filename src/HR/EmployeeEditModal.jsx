import { useState, useEffect } from "react";
import { useTheme } from "../context/ThemeContext";
import { motion, AnimatePresence } from "framer-motion";
import { X, Save, User, Building, MapPin, Calendar, Phone } from "lucide-react";
import { Button } from "../components/ui/button";
import { Input } from "../components/ui/input";
import { Select, SelectOption } from "../components/ui/select";
import { employeeAPI, getErrorMessage, showNotification } from "../lib/api";
import { formatDateForInput } from "../lib/dateUtils";

const EmployeeEditModal = ({ employee, isOpen, onClose, onSuccess }) => {
  const { theme } = useTheme();
  const isDarkMode = theme === "dark";

  const [formData, setFormData] = useState({
    ุงูุงุณู: "",
    ุงูุฑูู_ุงููุฏูู: "",
    ุงููุธููุฉ: "",
    ููุทูุฉ_ุงูุนูู: "",
    ููุฑ_ุงูุนูู: "",
    ุงูุฌูุณ: "",
    ุชุงุฑูุฎ_ุงููููุงุฏ: "",
    ุงูุฏุฑุฌุฉ: "",
    ุชุงุฑูุฎ_ุงูุชุนููู: "",
    ุงููุฌููุนุฉ_ุงูููุนูุฉ_ูููุธุงุฆู: "",
    ุชุงุฑูุฎ_ุดุบู_ุงูุฏุฑุฌุฉ: "",
    ุชุงุฑูุฎ_ุดุบู_ุงููุธููุฉ: "",
    ุฑูู_ุงููุงุชู: "",
    ูููุน_ุงูุนูู: ""
  });

  const [loading, setLoading] = useState(false);
  const [errors, setErrors] = useState({});

  // Initialize form data when employee changes
  useEffect(() => {
    console.log('๐ EmployeeEditModal received employee:', employee);
    if (employee) {
      console.log('๐ Employee data fields:', Object.keys(employee));
      console.log('๐ Employee name:', employee.ุงูุงุณู);
      console.log('๐ Employee position:', employee.ุงููุธููุฉ);
      console.log('๐ Employee grade:', employee.ุงูุฏุฑุฌุฉ);
      
      setFormData({
        ุงูุงุณู: employee.ุงูุงุณู || employee.name || "",
        ุงูุฑูู_ุงููุฏูู: employee.ุงูุฑูู_ุงููุฏูู || employee.civilId || "",
        ุงููุธููุฉ: employee.ุงููุธููุฉ || employee.position || "",
        ููุทูุฉ_ุงูุนูู: employee.ููุทูุฉ_ุงูุนูู || employee.department || "",
        ููุฑ_ุงูุนูู: employee.ููุฑ_ุงูุนูู || employee.workLocation || "",
        ุงูุฌูุณ: employee.ุงูุฌูุณ || employee.gender || "",
        ุชุงุฑูุฎ_ุงููููุงุฏ: formatDateForInput(employee.ุชุงุฑูุฎ_ุงููููุงุฏ || employee.birthDate) || "",
        ุงูุฏุฑุฌุฉ: employee.ุงูุฏุฑุฌุฉ || employee.grade || "",
        ุชุงุฑูุฎ_ุงูุชุนููู: formatDateForInput(employee.ุชุงุฑูุฎ_ุงูุชุนููู || employee.hireDate) || "",
        ุงููุฌููุนุฉ_ุงูููุนูุฉ_ูููุธุงุฆู: employee.ุงููุฌููุนุฉ_ุงูููุนูุฉ_ูููุธุงุฆู || employee.jobGroup || "",
        ุชุงุฑูุฎ_ุดุบู_ุงูุฏุฑุฌุฉ: formatDateForInput(employee.ุชุงุฑูุฎ_ุดุบู_ุงูุฏุฑุฌุฉ || employee.gradeDate) || "",
        ุชุงุฑูุฎ_ุดุบู_ุงููุธููุฉ: formatDateForInput(employee.ุชุงุฑูุฎ_ุดุบู_ุงููุธููุฉ || employee.jobDate) || "",
        ุฑูู_ุงููุงุชู: employee.ุฑูู_ุงููุงุชู || employee.contactNumber || "",
        ูููุน_ุงูุนูู: employee.ูููุน_ุงูุนูู || employee.workLocations || ""
      });
      console.log('๐ Form data set to:', formData);
      setErrors({});
    }
  }, [employee]);

  // Form validation
  const validateForm = () => {
    const newErrors = {};

    if (!formData.ุงูุงุณู.trim()) {
      newErrors.ุงูุงุณู = "ุงูุงุณู ูุทููุจ";
    }

    if (!formData.ุงูุฑูู_ุงููุฏูู.trim()) {
      newErrors.ุงูุฑูู_ุงููุฏูู = "ุงูุฑูู ุงููุฏูู ูุทููุจ";
    }

    if (!formData.ุงููุธููุฉ.trim()) {
      newErrors.ุงููุธููุฉ = "ุงููุธููุฉ ูุทููุจุฉ";
    }

    if (!formData.ููุทูุฉ_ุงูุนูู.trim()) {
      newErrors.ููุทูุฉ_ุงูุนูู = "ููุทูุฉ ุงูุนูู ูุทููุจุฉ";
    }

    if (!formData.ุงูุฌูุณ) {
      newErrors.ุงูุฌูุณ = "ุงูุฌูุณ ูุทููุจ";
    }

    if (!formData.ุชุงุฑูุฎ_ุงููููุงุฏ.trim()) {
      newErrors.ุชุงุฑูุฎ_ุงููููุงุฏ = "ุชุงุฑูุฎ ุงููููุงุฏ ูุทููุจ";
    }

    if (!formData.ุงูุฏุฑุฌุฉ.trim()) {
      newErrors.ุงูุฏุฑุฌุฉ = "ุงูุฏุฑุฌุฉ ูุทููุจุฉ";
    }

    if (!formData.ุชุงุฑูุฎ_ุงูุชุนููู.trim()) {
      newErrors.ุชุงุฑูุฎ_ุงูุชุนููู = "ุชุงุฑูุฎ ุงูุชุนููู ูุทููุจ";
    }

    if (!formData.ุงููุฌููุนุฉ_ุงูููุนูุฉ_ูููุธุงุฆู.trim()) {
      newErrors.ุงููุฌููุนุฉ_ุงูููุนูุฉ_ูููุธุงุฆู = "ุงููุฌููุนุฉ ุงูููุนูุฉ ูุทููุจุฉ";
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  // Handle form submission
  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!validateForm()) {
      return;
    }

    setLoading(true);
    try {
      const civilId = employee.ุงูุฑูู_ุงููุฏูู || employee.civilId;
      await employeeAPI.updateEmployee(civilId, formData);
      showNotification("ุชู ุชุญุฏูุซ ุจูุงูุงุช ุงูููุธู ุจูุฌุงุญ", "success");
      onSuccess();
      onClose();
    } catch (err) {
      const errorMessage = getErrorMessage(err);
      showNotification(errorMessage, "error");
      console.error("Error updating employee:", err);
    } finally {
      setLoading(false);
    }
  };

  // Handle input changes
  const handleInputChange = (field, value) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
    
    // Clear error when user starts typing
    if (errors[field]) {
      setErrors(prev => ({
        ...prev,
        [field]: ""
      }));
    }
  };

  // Handle work locations
  const handleWorkLocationChange = (value) => {
    // Allow direct input with commas, don't split immediately
    handleInputChange('ูููุน_ุงูุนูู', value);
  };

  if (!isOpen || !employee) return null;

  return (
    <AnimatePresence>
      <motion.div
        className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
      >
        <motion.div
          className={`${isDarkMode ? "bg-gray-800" : "bg-white"} rounded-2xl shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto`}
          initial={{ scale: 0.9, opacity: 0 }}
          animate={{ scale: 1, opacity: 1 }}
          exit={{ scale: 0.9, opacity: 0 }}
        >
          {/* Header */}
          <div className="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
            <h2 className="text-2xl font-bold text-gray-800 dark:text-white">
              ุชุนุฏูู ุจูุงูุงุช ุงูููุธู
            </h2>
            <button
              onClick={onClose}
              className="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
            >
              <X className="w-6 h-6 text-gray-500 dark:text-gray-400" />
            </button>
          </div>

          {/* Form */}
          <form onSubmit={handleSubmit} className="p-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {/* Personal Information */}
              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-gray-800 dark:text-white flex items-center gap-2">
                  <User className="w-5 h-5" />
                  ุงููุนูููุงุช ุงูุดุฎุตูุฉ
                </h3>

                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">
                    ุงูุงุณู *
                  </label>
                                     <Input
                     value={formData.ุงูุงุณู}
                     onChange={(e) => handleInputChange('ุงูุงุณู', e.target.value)}
                     className={errors.ุงูุงุณู ? "border-red-500 h-12 text-base" : "h-12 text-base"}
                     placeholder="ุฃุฏุฎู ุงูุงุณู ุงููุงูู"
                   />
                  {errors.ุงูุงุณู && (
                    <p className="text-red-500 text-sm mt-1">{errors.ุงูุงุณู}</p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">
                    ุงูุฑูู ุงููุฏูู *
                  </label>
                                     <Input
                     value={formData.ุงูุฑูู_ุงููุฏูู}
                     onChange={(e) => handleInputChange('ุงูุฑูู_ุงููุฏูู', e.target.value)}
                     className={errors.ุงูุฑูู_ุงููุฏูู ? "border-red-500 h-12 text-base" : "h-12 text-base"}
                     placeholder="ุฃุฏุฎู ุงูุฑูู ุงููุฏูู"
                   />
                  {errors.ุงูุฑูู_ุงููุฏูู && (
                    <p className="text-red-500 text-sm mt-1">{errors.ุงูุฑูู_ุงููุฏูู}</p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">
                    ุงูุฌูุณ *
                  </label>
                                     <Select
                     value={formData.ุงูุฌูุณ}
                     onChange={(e) => handleInputChange('ุงูุฌูุณ', e.target.value)}
                     className={errors.ุงูุฌูุณ ? "border-red-500 h-12 text-base" : "h-12 text-base"}
                   >
                    <SelectOption value="">ุงุฎุชุฑ ุงูุฌูุณ</SelectOption>
                    <SelectOption value="ุฐูุฑ">ุฐูุฑ</SelectOption>
                    <SelectOption value="ุฃูุซู">ุฃูุซู</SelectOption>
                  </Select>
                  {errors.ุงูุฌูุณ && (
                    <p className="text-red-500 text-sm mt-1">{errors.ุงูุฌูุณ}</p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">
                    ุชุงุฑูุฎ ุงููููุงุฏ *
                  </label>
                                     <Input
                     type="date"
                     value={formData.ุชุงุฑูุฎ_ุงููููุงุฏ}
                     onChange={(e) => handleInputChange('ุชุงุฑูุฎ_ุงููููุงุฏ', e.target.value)}
                     className={errors.ุชุงุฑูุฎ_ุงููููุงุฏ ? "border-red-500 h-12 text-base" : "h-12 text-base"}
                   />
                  {errors.ุชุงุฑูุฎ_ุงููููุงุฏ && (
                    <p className="text-red-500 text-sm mt-1">{errors.ุชุงุฑูุฎ_ุงููููุงุฏ}</p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">
                    ุฑูู ุงููุงุชู
                  </label>
                                     <Input
                     value={formData.ุฑูู_ุงููุงุชู}
                     onChange={(e) => handleInputChange('ุฑูู_ุงููุงุชู', e.target.value)}
                     className="h-12 text-base"
                     placeholder="ุฃุฏุฎู ุฑูู ุงููุงุชู"
                   />
                </div>
              </div>

              {/* Employment Information */}
              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-gray-800 dark:text-white flex items-center gap-2">
                  <Building className="w-5 h-5" />
                  ูุนูููุงุช ุงูุชูุธูู
                </h3>

                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">
                    ุงููุธููุฉ *
                  </label>
                  <Input
                    value={formData.ุงููุธููุฉ}
                    onChange={(e) => handleInputChange('ุงููุธููุฉ', e.target.value)}
                    className={errors.ุงููุธููุฉ ? "border-red-500 h-12 text-base" : "h-12 text-base"}
                    placeholder="ุฃุฏุฎู ุงููุธููุฉ"
                  />
                  {errors.ุงููุธููุฉ && (
                    <p className="text-red-500 text-sm mt-1">{errors.ุงููุธููุฉ}</p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">
                    ููุทูุฉ ุงูุนูู *
                  </label>
                  <Input
                    value={formData.ููุทูุฉ_ุงูุนูู}
                    onChange={(e) => handleInputChange('ููุทูุฉ_ุงูุนูู', e.target.value)}
                    className={errors.ููุทูุฉ_ุงูุนูู ? "border-red-500 h-12 text-base" : "h-12 text-base"}
                    placeholder="ุฃุฏุฎู ููุทูุฉ ุงูุนูู"
                  />
                  {errors.ููุทูุฉ_ุงูุนูู && (
                    <p className="text-red-500 text-sm mt-1">{errors.ููุทูุฉ_ุงูุนูู}</p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">
                    ููุฑ ุงูุนูู
                  </label>
                  <Input
                    value={formData.ููุฑ_ุงูุนูู}
                    onChange={(e) => handleInputChange('ููุฑ_ุงูุนูู', e.target.value)}
                    className="h-12 text-base"
                    placeholder="ุฃุฏุฎู ููุฑ ุงูุนูู"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">
                    ุงูุฏุฑุฌุฉ *
                  </label>
                  <Input
                    value={formData.ุงูุฏุฑุฌุฉ}
                    onChange={(e) => handleInputChange('ุงูุฏุฑุฌุฉ', e.target.value)}
                    className={errors.ุงูุฏุฑุฌุฉ ? "border-red-500 h-12 text-base" : "h-12 text-base"}
                    placeholder="ุฃุฏุฎู ุงูุฏุฑุฌุฉ"
                  />
                  {errors.ุงูุฏุฑุฌุฉ && (
                    <p className="text-red-500 text-sm mt-1">{errors.ุงูุฏุฑุฌุฉ}</p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">
                    ุงููุฌููุนุฉ ุงูููุนูุฉ ูููุธุงุฆู *
                  </label>
                  <Input
                    value={formData.ุงููุฌููุนุฉ_ุงูููุนูุฉ_ูููุธุงุฆู}
                    onChange={(e) => handleInputChange('ุงููุฌููุนุฉ_ุงูููุนูุฉ_ูููุธุงุฆู', e.target.value)}
                    className={errors.ุงููุฌููุนุฉ_ุงูููุนูุฉ_ูููุธุงุฆู ? "border-red-500 h-12 text-base" : "h-12 text-base"}
                    placeholder="ุฃุฏุฎู ุงููุฌููุนุฉ ุงูููุนูุฉ"
                  />
                  {errors.ุงููุฌููุนุฉ_ุงูููุนูุฉ_ูููุธุงุฆู && (
                    <p className="text-red-500 text-sm mt-1">{errors.ุงููุฌููุนุฉ_ุงูููุนูุฉ_ูููุธุงุฆู}</p>
                  )}
                </div>
              </div>
            </div>

            {/* Dates Section */}
            <div className="mt-6">
              <h3 className="text-lg font-semibold text-gray-800 dark:text-white flex items-center gap-2 mb-4">
                <Calendar className="w-5 h-5" />
                ุงูุชูุงุฑูุฎ ุงููููุฉ
              </h3>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">
                    ุชุงุฑูุฎ ุงูุชุนููู *
                  </label>
                  <Input
                    type="date"
                    value={formData.ุชุงุฑูุฎ_ุงูุชุนููู}
                    onChange={(e) => handleInputChange('ุชุงุฑูุฎ_ุงูุชุนููู', e.target.value)}
                    className={errors.ุชุงุฑูุฎ_ุงูุชุนููู ? "border-red-500 h-12 text-base" : "h-12 text-base"}
                  />
                  {errors.ุชุงุฑูุฎ_ุงูุชุนููู && (
                    <p className="text-red-500 text-sm mt-1">{errors.ุชุงุฑูุฎ_ุงูุชุนููู}</p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">
                    ุชุงุฑูุฎ ุดุบู ุงูุฏุฑุฌุฉ
                  </label>
                  <Input
                    type="date"
                    value={formData.ุชุงุฑูุฎ_ุดุบู_ุงูุฏุฑุฌุฉ}
                    onChange={(e) => handleInputChange('ุชุงุฑูุฎ_ุดุบู_ุงูุฏุฑุฌุฉ', e.target.value)}
                    className="h-12 text-base"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">
                    ุชุงุฑูุฎ ุดุบู ุงููุธููุฉ
                  </label>
                  <Input
                    type="date"
                    value={formData.ุชุงุฑูุฎ_ุดุบู_ุงููุธููุฉ}
                    onChange={(e) => handleInputChange('ุชุงุฑูุฎ_ุดุบู_ุงููุธููุฉ', e.target.value)}
                    className="h-12 text-base"
                  />
                </div>
              </div>
            </div>

            {/* Work Locations */}
            <div className="mt-6">
              <h3 className="text-lg font-semibold text-gray-800 dark:text-white flex items-center gap-2 mb-4">
                <MapPin className="w-5 h-5" />
                ููุงูุน ุงูุนูู
              </h3>
              <div>
                <label className="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">
                  ููุงูุน ุงูุนูู (ููุตููุฉ ุจููุงุตู)
                </label>
                                 <Input
                   value={formData.ูููุน_ุงูุนูู}
                   onChange={(e) => handleWorkLocationChange(e.target.value)}
                   className="h-12 text-base"
                   placeholder="ุงูุฑูุงุถ, ุฌุฏุฉ, ุงูุฏูุงู"
                 />
              </div>
            </div>

            {/* Form Actions */}
            <div className="flex items-center justify-end gap-4 mt-8 pt-6 border-t border-gray-200 dark:border-gray-700">
              <Button
                type="button"
                variant="outline"
                onClick={onClose}
                disabled={loading}
              >
                ุฅูุบุงุก
              </Button>
              <Button
                type="submit"
                disabled={loading}
                className="flex items-center gap-2"
              >
                {loading ? (
                  <>
                    <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
                    ุฌุงุฑู ุงูุญูุธ...
                  </>
                ) : (
                  <>
                    <Save className="w-4 h-4" />
                    ุญูุธ ุงูุชุบููุฑุงุช
                  </>
                )}
              </Button>
            </div>
          </form>
        </motion.div>
      </motion.div>
    </AnimatePresence>
  );
};

export default EmployeeEditModal;
